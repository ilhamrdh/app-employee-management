openapi: 3.0.0
info:
    title: Employee Management System
    version: 1.0.0
servers:
    - url: http://127.0.0.1:3000
components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
tags:
    - name: auth
    - name: employee
    - name: department
paths:
    /api/v1/auth/register:
        post:
            tags:
                - auth
            summary: Register
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            example:
                                username: admin1
                                password: secretadmin
                                role: ADMIN
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
                "400":
                    description: Error response
                    content:
                        application/json:
                            example:
                                errors: "Username or Password is wrong"
    /api/v1/auth/login:
        post:
            tags:
                - auth
            summary: Login
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            example:
                                username: admin1
                                password: secretadmin
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
                "400":
                    description: Error response
                    content:
                        application/json:
                            example:
                                errors: "Username or Password is wrong"
    /api/v1/employees/create:
        post:
            tags:
                - employee
            summary: Create Employee
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            example:
                                name: Jhon Doe1
                                position: Software Analis
                                salary: 1000000
                                department_id: 11
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
                "400":
                    description: Error response
                    content:
                        application/json:
                            example:
                                errors: "Username or Password is wrong"
    /api/v1/employees/history/1:
        get:
            tags:
                - employee
            summary: Get History employee
            security:
                - bearerAuth: []
            parameters:
                - name: page
                  in: query
                  schema:
                      type: integer
                  example: "1"
                - name: size
                  in: query
                  schema:
                      type: integer
                  example: "10"
                - name: start_date
                  in: query
                  schema:
                      type: string
                  description: Start date changed
                - name: end_date
                  in: query
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
                "400":
                    description: Error response
                    content:
                        application/json:
                            example:
                                errors: "Username or Password is wrong"
    /api/v1/employees/update/1:
        put:
            tags:
                - employee
            summary: Update Employee
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            example:
                                position: Software Analyst
                                salary: 5000000
                                department_id: 6
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
                "400":
                    description: Error response
                    content:
                        application/json:
                            example:
                                errors: "Username or Password is wrong"
    /api/v1/employees:
        get:
            tags:
                - employee
            summary: Get Employees
            security:
                - bearerAuth: []
            parameters:
                - name: name
                  in: query
                  schema:
                      type: string
                  example: John
                - name: position
                  in: query
                  schema:
                      type: string
                  example: Manager
                - name: department_id
                  in: query
                  schema:
                      type: integer
                  example: "6"
                - name: salary_sort
                  in: query
                  schema:
                      type: string
                  description: option (asc, desc)
                  example: asc
                - name: salary_min
                  in: query
                  schema:
                      type: integer
                  description: min salary
                  example: "100000"
                - name: salary_max
                  in: query
                  schema:
                      type: integer
                  description: max salary
                  example: "1000000"
                - name: page
                  in: query
                  schema:
                      type: integer
                  example: "1"
                - name: size
                  in: query
                  schema:
                      type: integer
                  example: "10"
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
                "400":
                    description: Error response
                    content:
                        application/json:
                            example:
                                errors: "Username or Password is wrong"
    /api/v1/employees/delete/1:
        put:
            tags:
                - employee
            summary: Delete Employee
            requestBody:
                content: {}
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
                "404":
                    description: Error response
                    content:
                        application/json:
                            example:
                                errors: "id employee not found"
                "400":
                    description: Error response
                    content:
                        application/json:
                            example:
                                errors: "Id must be number"
    /api/v1/departments/create:
        post:
            tags:
                - department
            summary: Create Department
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            example:
                                name: QA Engineer
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
                "400":
                    description: Error response
                    content:
                        application/json:
                            example:
                                errors: "Username or Password is wrong"
    /api/v1/departments/update/11:
        put:
            tags:
                - department
            summary: Update Department
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            example:
                                name: Quality Assurance
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
                "400":
                    description: Error response
                    content:
                        application/json:
                            example:
                                errors: "Username or Password is wrong"
    /api/v1/departments/delete/11:
        delete:
            tags:
                - department
            summary: Delete Department
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
                "400":
                    description: Error response
                    content:
                        application/json:
                            example:
                                errors: "Username or Password is wrong"
    /api/v1/departments:
        get:
            tags:
                - department
            summary: Get Departments
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
                "400":
                    description: Error response
                    content:
                        application/json:
                            example:
                                errors: "Username or Password is wrong"
